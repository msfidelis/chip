basePath: /
definitions:
  healthcheck.Healthcheck:
    properties:
      description:
        type: string
      status:
        type: integer
    required:
    - description
    - status
    type: object
  liveness.Liveness:
    properties:
      status:
        type: string
    required:
    - status
    type: object
  logging.response:
    properties:
      message:
        type: string
      status:
        type: integer
    required:
    - message
    - status
    type: object
  proxy.Request:
    properties:
      body:
        type: string
      headers:
        items:
          properties:
            name:
              type: string
            value:
              type: string
          type: object
        type: array
      host:
        type: string
      method:
        type: string
      path:
        type: string
    type: object
  proxy.Response:
    properties:
      body:
        type: string
      headers:
        type: string
      status_code:
        type: integer
    type: object
  readiness.Readiness:
    properties:
      status:
        type: string
    required:
    - status
    type: object
  reflect.Request:
    properties:
      body:
        type: string
      cookies:
        type: string
      headers:
        type: string
      method:
        type: string
      params:
        type: string
      path:
        type: string
    required:
    - body
    - cookies
    - headers
    - method
    - params
    - path
    type: object
  system.Capabilities:
    properties:
      cpus:
        type: integer
      hostname:
        type: string
      hypervisor:
        type: string
      memory:
        type: integer
      os:
        type: string
    required:
    - cpus
    - hostname
    - hypervisor
    - memory
    - os
    type: object
  teapot.Teapot:
    properties:
      body:
        type: string
    type: object
info:
  contact:
    email: matheus@nanoshots.com.br
    name: API Support
  description: Cloud Native Toolset Running in Containers.
  license:
    name: MIT
    url: https://github.com/mfidelis/chip/blob/master/LICENSE
  termsOfService: http://swagger.io/terms/
  title: Chip
  version: "1.0"
paths:
  /burn/cpu:
    get:
      produces:
      - application/json
      summary: Burn CPU for Loadtests and Auto Scaling Tests
      tags:
      - Loadtest
  /burn/ram:
    get:
      produces:
      - application/json
      summary: Burn RAM for Loadtests and Auto Scaling Tests
      tags:
      - Loadtest
  /healthcheck:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/healthcheck.Healthcheck'
      summary: Return 200 status Ok in healthcheck
      tags:
      - Healthcheck
  /healthcheck/error:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/healthcheck.Healthcheck'
      summary: Return 500 Error Status Code
      tags:
      - Healthcheck
  /healthcheck/fault:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/healthcheck.Healthcheck'
      summary: Inject common errors in healthcheck
      tags:
      - Healthcheck
  /healthcheck/fault/soft:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/healthcheck.Healthcheck'
      summary: Inject ocasional erros in healthcheck
      tags:
      - Healthcheck
  /liveness:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/liveness.Liveness'
      summary: Return 200 status Ok in Liveness
      tags:
      - Liveness
  /liveness/error:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/liveness.Liveness'
      summary: Return 500 Error Status Code
      tags:
      - Liveness
  /logging:
    get:
      parameters:
      - description: Number of log events; default 1000
        in: query
        name: events
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/logging.response'
      summary: Sent log events to application stdout
      tags:
      - Logging
  /proxy:
    post:
      parameters:
      - description: Proxy Information
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/proxy.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxy.Response'
      summary: Proxy Request
      tags:
      - Proxy
  /readiness:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/readiness.Readiness'
      summary: Return 200 status Ok in Readiness
      tags:
      - Readiness
  /readiness/error:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/readiness.Readiness'
      summary: Return 500 Error Status Code
      tags:
      - Readiness
  /reflection:
    delete:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reflect.Request'
      summary: Retun request parameters in response for transformation tests
      tags:
      - Reflection
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reflect.Request'
      summary: Retun request parameters in response for transformation tests
      tags:
      - Reflection
    patch:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reflect.Request'
      summary: Retun request parameters in response for transformation tests
      tags:
      - Reflection
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reflect.Request'
      summary: Retun request parameters in response for transformation tests
      tags:
      - Reflection
    put:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reflect.Request'
      summary: Retun request parameters in response for transformation tests
      tags:
      - Reflection
  /system:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/system.Capabilities'
      summary: Return 500 Error Status Code
      tags:
      - System
  /system/environment:
    get:
      produces:
      - application/json
      summary: Dump all environment variables in container
      tags:
      - System
  /version:
    get:
      produces:
      - application/json
      summary: Return version for container
      tags:
      - Version
  /whoami:
    get:
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/teapot.Teapot'
      summary: Return 200 status Teapot in Teapot
      tags:
      - ImATeaPot
swagger: "2.0"
